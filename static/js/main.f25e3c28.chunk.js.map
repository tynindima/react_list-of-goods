{"version":3,"sources":["components/GoodsList/GoodsList.js","App.js","index.js"],"names":["GoodList","props","goods","minLength","handleReverseList","handleSortAlphabet","handleResetList","handleSortByLength","handleSelectList","type","onClick","name","id","onChange","value","map","good","key","defaultProps","goodsFromServer","App","state","isLoad","goodsSelected","checkButton","setState","prevState","reverse","sort","a","b","localeCompare","length","target","filter","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAGaA,G,MAAW,SAACC,GAAW,IAEhCC,EAEED,EAFFC,MAAOC,EAELF,EAFKE,UAAWC,EAEhBH,EAFgBG,kBAClBC,EACEJ,EADFI,mBAAoBC,EAClBL,EADkBK,gBAAiBC,EACnCN,EADmCM,mBAAoBC,EACvDP,EADuDO,iBAG3D,OACE,oCACE,4BACEC,KAAK,SACLC,QAASN,GAFX,WAOA,4BACEK,KAAK,SACLC,QAASL,GAFX,QAOA,4BACEI,KAAK,SACLC,QAASJ,GAFX,SAOA,4BACEG,KAAK,SACLC,QAASH,GAFX,UAOA,4BACEI,KAAK,QACLC,GAAG,eACHC,SAAUL,EACVM,MAAOX,GAEP,oCACE,4BAAQW,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAGJ,4BACGZ,EAAMa,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,GAAOA,UAiB1BhB,EAASkB,aAAe,CACtBhB,MAAO,GACPC,UAAW,KC3Eb,IAAMgB,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmFaC,E,2MA/EbC,MAAQ,CACNC,QAAQ,EACRpB,MAAM,GAAD,OAAMiB,GACXI,cAAc,GAAD,OAAMJ,GACnBhB,UAAW,K,EAGbqB,YAAc,WACZ,EAAKC,SAAS,CACZH,QAAQ,K,EAIZlB,kBAAoB,WAClB,EAAKqB,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,MAAO,YAAIwB,EAAUxB,OAAOyB,e,EAIhCtB,mBAAqB,WACnB,EAAKoB,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,MAAO,YAAIwB,EAAUxB,OAAO0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI/DxB,gBAAkB,WAChB,EAAKmB,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,UAAW,IACXD,MAAM,YAAKwB,EAAUH,oB,EAIzBhB,mBAAqB,WACnB,EAAKkB,UAAS,SAAAC,GAAS,MAAK,CAC1BxB,MAAO,YAAIwB,EAAUxB,OAAO0B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,e,EAI5DxB,iBAAmB,YAAiB,IAAdyB,EAAa,EAAbA,OACpB,EAAKR,UAAS,SAAAC,GAAS,MAAK,CAC1BvB,UAAW8B,EAAOnB,MAClBZ,MAAO,YAAIwB,EAAUH,eAClBW,QAAO,SAAAlB,GAAI,OAAIA,EAAKgB,QAAUC,EAAOnB,c,wEAIlC,IAAD,EAC8BqB,KAAKd,MAAlCnB,EADD,EACCA,MAAOC,EADR,EACQA,UAAWmB,EADnB,EACmBA,OAE1B,OACE,yBAAKc,UAAU,OACb,qCAEEd,EAEI,kBAAC,EAAD,CACEpB,MAAOA,EACPC,UAAWA,EACXC,kBAAmB+B,KAAK/B,kBACxBC,mBAAoB8B,KAAK9B,mBACzBC,gBAAiB6B,KAAK7B,gBACtBC,mBAAoB4B,KAAK5B,mBACzBC,iBAAkB2B,KAAK3B,mBAIzB,4BACEC,KAAK,SACLC,QAASyB,KAAKX,aAFhB,a,GAnEIa,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f25e3c28.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodList = (props) => {\n  const {\n    goods, minLength, handleReverseList,\n    handleSortAlphabet, handleResetList, handleSortByLength, handleSelectList,\n  } = props;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={handleReverseList}\n      >\n      Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={handleSortAlphabet}\n      >\n      Sort\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={handleResetList}\n      >\n      Reset\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={handleSortByLength}\n      >\n      Length\n      </button>\n\n      <select\n        name=\"goods\"\n        id=\"goods-select\"\n        onChange={handleSelectList}\n        value={minLength}\n      >\n        <>\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n        </>\n      </select>\n      <ul>\n        {goods.map(good => (\n          <li key={good}>{good}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string),\n  handleReverseList: PropTypes.func.isRequired,\n  handleSortAlphabet: PropTypes.func.isRequired,\n  handleResetList: PropTypes.func.isRequired,\n  handleSortByLength: PropTypes.func.isRequired,\n  handleSelectList: PropTypes.func.isRequired,\n  minLength: PropTypes.string,\n};\n\nGoodList.defaultProps = {\n  goods: [],\n  minLength: '1',\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isLoad: false,\n    goods: [...goodsFromServer],\n    goodsSelected: [...goodsFromServer],\n    minLength: '1',\n  };\n\n  checkButton = () => {\n    this.setState({\n      isLoad: true,\n    });\n  };\n\n  handleReverseList = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  };\n\n  handleSortAlphabet = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  };\n\n  handleResetList = () => {\n    this.setState(prevState => ({\n      minLength: '1',\n      goods: [...prevState.goodsSelected],\n    }));\n  };\n\n  handleSortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  handleSelectList = ({ target }) => {\n    this.setState(prevState => ({\n      minLength: target.value,\n      goods: [...prevState.goodsSelected]\n        .filter(good => good.length >= target.value),\n    }));\n  };\n\n  render() {\n    const { goods, minLength, isLoad } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {\n          isLoad\n            ? (\n              <GoodList\n                goods={goods}\n                minLength={minLength}\n                handleReverseList={this.handleReverseList}\n                handleSortAlphabet={this.handleSortAlphabet}\n                handleResetList={this.handleResetList}\n                handleSortByLength={this.handleSortByLength}\n                handleSelectList={this.handleSelectList}\n              />\n            )\n            : (\n              <button\n                type=\"button\"\n                onClick={this.checkButton}\n              >\n              List\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}